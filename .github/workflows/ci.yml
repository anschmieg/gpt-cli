name: CI

on:
  push: {}
  pull_request: {}
  release:
    types: [published]

jobs:
  unit:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: "latest"

      - name: Cache Deno deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.json') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Warm Deno cache
        run: |
          deno cache ./src/providers/openai.ts ./src/providers/api_openai_compatible.ts

      - name: Run deno lint
        run: deno lint

      - name: Check formatting
        run: deno fmt --check

      - name: Run unit tests (no network)
        run: |
          deno test \
            tests/cli \
            tests/providers \
            tests/config_test.ts \
            tests/core_test.ts \
            tests/utils_test.ts \
            --allow-read \
            --allow-env

  integration:
    name: Integration tests (mock server)
    runs-on: ubuntu-latest
    # Run integration on pull requests, tags, and pushes to main
    # NOTE: Integration tests spawn the local mock server and therefore require
    # limited run/net/read/env permissions. We run these on PRs and pushes to
    # `main` (and tags) so integration regressions are caught early without
    # running them on every single push to long-lived branches.
    if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: "latest"

      - name: Cache Deno deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.json') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Warm Deno cache
        run: deno cache ./src/providers/openai.ts ./src/providers/api_openai_compatible.ts

      - name: Run integration test (spawns mock server)
        env:
          GPT_CLI_TEST: "1"
        run: |
          deno test tests/integration --allow-run --allow-net=127.0.0.1:8086 --allow-env --allow-read

  coverage:
    name: Coverage (lcov)
    runs-on: ubuntu-latest
    needs: integration
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: "latest"

      - name: Run tests with coverage
        env:
          GPT_CLI_TEST: "1"
        run: |
          deno test --coverage=coverage tests/cli tests/providers tests/config_test.ts tests/core_test.ts tests/utils_test.ts tests/integration --allow-run --allow-net=127.0.0.1:8086 --allow-env --allow-read

      - name: Generate lcov
        run: |
          deno coverage --lcov coverage > coverage/lcov.info

      - name: Upload lcov artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: coverage/lcov.info
